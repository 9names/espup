name: Continuous Deployment

on:
  push:
    tags:
      - "[v]?[0-9]+.[0-9]+.[0-9]+"

env:
  CARGO_TERM_COLOR: always

jobs:
  publish-release:
    name: Publishing for ${{ matrix.job.os }}
    runs-on: ${{ matrix.job.os }}
    strategy:
      matrix:
        job:
          - os: macos-latest
            target: x86_64-apple-darwin
            binary-postfix: ""
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            binary-postfix: ""
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            binary-postfix: ".exe"
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            binary-postfix: ""
          - os: macos-latest
            target: aarch64-apple-darwin
            binary-postfix: ""
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          toolchain: stable
          args: --release --target ${{ matrix.job.target }}
      - name: Install strip command
        shell: bash
        run: |
          if [[ ${{ matrix.job.target }} == aarch64-unknown-linux-gnu ]]; then
              sudo apt update
              sudo apt-get install -y binutils-aarch64-linux-gnu
          fi
      - name: Packaging final binary
        shell: bash
        run: |
          cd target/${{ matrix.job.target }}/release

          ####### reduce binary size by removing debug symbols #######
          BINARY_NAME=espup${{ matrix.job.binary-postfix }}
          if [[ ${{ matrix.job.target }} == aarch64-unknown-linux-gnu ]]; then
            GCC_PREFIX="aarch64-linux-gnu-"
          else
            GCC_PREFIX=""
          fi
          "$GCC_PREFIX"strip $BINARY_NAME

          ########## create tar.gz ##########
          RELEASE_NAME=espup-${{ matrix.job.target }}
          tar czvf $RELEASE_NAME.tar.gz $BINARY_NAME

          ########## create sha256 ##########
          if [[ ${{ runner.os }} == 'Windows' ]]; then
            certutil -hashfile $RELEASE_NAME.tar.gz sha256 | grep -E [A-Fa-f0-9]{64} > $RELEASE_NAME.sha256
          else
            shasum -a 256 $RELEASE_NAME.tar.gz > $RELEASE_NAME.sha256
          fi
      - name: Releasing assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/${{ matrix.job.target }}/release/espup-*.tar.gz
            target/${{ matrix.job.target }}/release/espup-*.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # publish-cargo:
  #   name: Publishing to Cargo
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v3
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #     - uses: Swatinem/rust-cache@v1
  #     - uses: actions-rs/cargo@v1
  #       with:
  #         command: publish
  #         args: --token ${{ secrets.CARGO_API_KEY }}
